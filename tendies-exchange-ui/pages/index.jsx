import {
  useRecoilValue,
} from 'recoil';
import { currentTokenStatsSelector } from '../atoms/selectors';
import {Line} from 'react-chartjs-2';

const annualizeRate = (rate) => {
  const blocksPerYear = 6533 * 365;
  const returnPerBlock = 1 + (rate/1e18)
  const apy = Math.pow(returnPerBlock, blocksPerYear);
  return apy;
}

const HistoricalChart = () => {
  const fontColor = "#ccc";
  const color = "#666";
  const formatPercent = (a, shouldExpand) => (a.toLocaleString(undefined,{style: 'percent', maximumFractionDigits:shouldExpand ? 3 : 0}))
  const options = {
    title: {
      display: true,
      text: "Compound Historical Borrow Rates",
      fontColor,
      fontSize: 16,
    },
    legend: {
      labels: {
        fontColor,
      },
      position: 'top'
    },
    tooltips: {
      mode: 'index',
      intersect: false,
      callbacks: {
        title: (tooltipItem) => new Date(tooltipItem[0].xLabel).toLocaleString(),
        label: (tooltipItem, data) => (data.datasets[tooltipItem.datasetIndex].label + ": " + formatPercent(tooltipItem.yLabel, true))
      }
    },
    hover: {
       mode: 'index',
       intersect: false
    },
    scales: {
      yAxes: [{
        scaleLabel: {
          display: true,
          labelString: "Annualized Borrow Rate (APR)",
          fontColor
        },
        ticks: {
          fontColor,
          callback: formatPercent,
          beginAtZero: true
        },
        gridLines: {
          color
        },
      }],
      xAxes: [{
        type: 'time',
        time: {
          unit: 'month'
        },
        scaleLabel: {
          display: true,
          labelString: "Date",
          fontColor
        },
        ticks: {
          fontColor,
        },
        gridLines: {
          color
        },
      }]
    }
  };
  const pointSizes = {
    pointBorderWidth: 1,
    pointHoverRadius: 5,
    pointHoverBorderWidth: 2,
    pointRadius: 1,
    pointHitRadius: 10,
  }
  const formatted = {
    labels: ['2020-07-01', '2020-07-02', '2020-07-03', '2020-07-04', '2020-07-05', '2020-07-06', '2020-07-07', '2020-07-08', '2020-07-09', '2020-07-10', '2020-07-11', '2020-07-12', '2020-07-13', '2020-07-14', '2020-07-15', '2020-07-16', '2020-07-17', '2020-07-18', '2020-07-19', '2020-07-20', '2020-07-21', '2020-07-22', '2020-07-23', '2020-07-24', '2020-07-25', '2020-07-26', '2020-07-27', '2020-07-28', '2020-07-29', '2020-07-30', '2020-07-31', '2020-08-01', '2020-08-02', '2020-08-03', '2020-08-04', '2020-08-05', '2020-08-06', '2020-08-07', '2020-08-08', '2020-08-09', '2020-08-10', '2020-08-11', '2020-08-12', '2020-08-13', '2020-08-14', '2020-08-15', '2020-08-16', '2020-08-17', '2020-08-18', '2020-08-19', '2020-08-20', '2020-08-21', '2020-08-22', '2020-08-23', '2020-08-24', '2020-08-25', '2020-08-26', '2020-08-27', '2020-08-28', '2020-08-29', '2020-08-30', '2020-08-31', '2020-09-01', '2020-09-02', '2020-09-03', '2020-09-04', '2020-09-05', '2020-09-06', '2020-09-07', '2020-09-08', '2020-09-09', '2020-09-10', '2020-09-11', '2020-09-12', '2020-09-13', '2020-09-14', '2020-09-15', '2020-09-16', '2020-09-17', '2020-09-18', '2020-09-19', '2020-09-20', '2020-09-21', '2020-09-22', '2020-09-23', '2020-09-24', '2020-09-25', '2020-09-26', '2020-09-27', '2020-09-28', '2020-09-29', '2020-09-30', '2020-10-01', '2020-10-02', '2020-10-03', '2020-10-04', '2020-10-05', '2020-10-06', '2020-10-07', '2020-10-08', '2020-10-09', '2020-10-10', '2020-10-11', '2020-10-12', '2020-10-13', '2020-10-14', '2020-10-15', '2020-10-16', '2020-10-17', '2020-10-18', '2020-10-19', '2020-10-20', '2020-10-21', '2020-10-22', '2020-10-23', '2020-10-24', '2020-10-25', '2020-10-26', '2020-10-27', '2020-10-28', '2020-10-29', '2020-10-30', '2020-10-31', '2020-11-01', '2020-11-02', '2020-11-03', '2020-11-04', '2020-11-05', '2020-11-06', '2020-11-07', '2020-11-08', '2020-11-09', '2020-11-10', '2020-11-11', '2020-11-12', '2020-11-13', '2020-11-14', '2020-11-15', '2020-11-16', '2020-11-17', '2020-11-18', '2020-11-19', '2020-11-20', '2020-11-21', '2020-11-22', '2020-11-23', '2020-11-24', '2020-11-25', '2020-11-26', '2020-11-27', '2020-11-28', '2020-11-29', '2020-11-30', '2020-12-01', '2020-12-02', '2020-12-03', '2020-12-04', '2020-12-05', '2020-12-06', '2020-12-07', '2020-12-08', '2020-12-09', '2020-12-10', '2020-12-11', '2020-12-12', '2020-12-13', '2020-12-14', '2020-12-15', '2020-12-16', '2020-12-17', '2020-12-18', '2020-12-19', '2020-12-20', '2020-12-21', '2020-12-22', '2020-12-23', '2020-12-24', '2020-12-25', '2020-12-26', '2020-12-27', '2020-12-28', '2020-12-29', '2020-12-30', '2020-12-31', '2021-01-01', '2021-01-02', '2021-01-03', '2021-01-04', '2021-01-05', '2021-01-06', '2021-01-07', '2021-01-08', '2021-01-09', '2021-01-10', '2021-01-11', '2021-01-12', '2021-01-13', '2021-01-14', '2021-01-15', '2021-01-16', '2021-01-17', '2021-01-18', '2021-01-19', '2021-01-20', '2021-01-21', '2021-01-22', '2021-01-23', '2021-01-24', '2021-01-25', '2021-01-26', '2021-01-27', '2021-01-28', '2021-01-29', '2021-01-30', '2021-01-31', '2021-02-01', '2021-02-02', '2021-02-03', '2021-02-04', '2021-02-05', '2021-02-06', '2021-02-07', '2021-02-08', '2021-02-09', '2021-02-10', '2021-02-11', '2021-02-12', '2021-02-13', '2021-02-14', '2021-02-15', '2021-02-16', '2021-02-17', '2021-02-18', '2021-02-19', '2021-02-20', '2021-02-21', '2021-02-22', '2021-02-23', '2021-02-24', '2021-02-25', '2021-02-26', '2021-02-27', '2021-02-28', '2021-03-01', '2021-03-02', '2021-03-03', '2021-03-04', '2021-03-05', '2021-03-06', '2021-03-07', '2021-03-08', '2021-03-09', '2021-03-10', '2021-03-11', '2021-03-12', '2021-03-13', '2021-03-14', '2021-03-15', '2021-03-16', '2021-03-17', '2021-03-18', '2021-03-19', '2021-03-20', '2021-03-21', '2021-03-22', '2021-03-23', '2021-03-24', '2021-03-25', '2021-03-26', '2021-03-27'],
    datasets: [
      {
        label: 'Past 30 Days Rolling Average',
        fill: false,
        lineTension: 0.1,
        backgroundColor: 'rgba(75,192,192,0.4)',
        borderColor: 'rgba(75,192,192,1)',
        borderJoinStyle: 'miter',
        pointBorderColor: 'rgba(75,192,192,1)',
        pointBackgroundColor: '#fff',
        pointHoverBackgroundColor: 'rgba(75,192,192,1)',
        pointHoverBorderColor: 'rgba(220,220,220,1)',
        ...pointSizes,
        data: [0.044937876352204364, 0.0440496142019724, 0.043572204337898546, 0.043971583462781405, 0.04439200356864492, 0.044868493949130395, 0.04534553447998024, 0.04548560701096416, 0.04556107838329049, 0.04553929960618919, 0.045541927556470574, 0.04568232864590094, 0.045945259079440914, 0.046230504282929186, 0.0463724945198285, 0.04661792087668548, 0.04735825395868365, 0.04827591789340824, 0.049252693162903816, 0.05036559596348367, 0.0514467090737758, 0.052563664717032, 0.05374433691755387, 0.054749937105527335, 0.05555387513580734, 0.05638406354648695, 0.057329894374339885, 0.057963740509949124, 0.058590402620623205, 0.05932271779815257, 0.06006771670285027, 0.06106446012009692, 0.061865050837662805, 0.06166873049173782, 0.061458682759851335, 0.06116366284087693, 0.060949339088303356, 0.061142846500753745, 0.06143892298899023, 0.06173933259399811, 0.061928817680804826, 0.06206842083896014, 0.062293876477128585, 0.06265217213353558, 0.06282892467638868, 0.06363823909389188, 0.06548087787197576, 0.0674256091955805, 0.06904212029284063, 0.07046709252981209, 0.07168590212788684, 0.07237111407201158, 0.07287985839667632, 0.07346834497158827, 0.07425200094439766, 0.07479569176214373, 0.07520124365161651, 0.07601773182036076, 0.07697591891547972, 0.07778277313060333, 0.07835200251664332, 0.07849864746403634, 0.07840951512280125, 0.07826994412440436, 0.07816402050281601, 0.07801161422954217, 0.07780455311837686, 0.07752078259165773, 0.07722816034253865, 0.07693543268389647, 0.07687393081927318, 0.07679940744253022, 0.07690767829183809, 0.07688704957783843, 0.07713087250783035, 0.07677495851084792, 0.07513198549460731, 0.07333391639968445, 0.07205202939972133, 0.07120609775393083, 0.07043468045502665, 0.07001745711400864, 0.06974231681495358, 0.06894132165332545, 0.06702929590095419, 0.06529346424731086, 0.06356505909172894, 0.06175202151250225, 0.05980910913753079, 0.05793792726038771, 0.05625656659251188, 0.05456345513990679, 0.0529744364376048, 0.05138155136764544, 0.04975326260921609, 0.04825987546150845, 0.046807505914889136, 0.04538445950928094, 0.04392379067394159, 0.042484771343980876, 0.04096471421543635, 0.03941101507095168, 0.037675792073512904, 0.03601607132763651, 0.034305542627392605, 0.03255217399254784, 0.0311156484728905, 0.029818056565559248, 0.028421616441013375, 0.02675544557912235, 0.025322247176172263, 0.024151377215587466, 0.02298926798286849, 0.02261138410510566, 0.023411939273461524, 0.024118040061127388, 0.024774775045304898, 0.02547475205572791, 0.02623156763797163, 0.027059102791266998, 0.027918108129426855, 0.02869504880963225, 0.0295348913230562, 0.030455912781238048, 0.031905967335138063, 0.03294991116234125, 0.033711159153297476, 0.034443878980925824, 0.03519117341238798, 0.036070666116077676, 0.037495144605746766, 0.038934095696867566, 0.03961062447949937, 0.04019507133739331, 0.04081587853373847, 0.04145968485065321, 0.04204608227810058, 0.04264710876790212, 0.043239441941679946, 0.04370211357996023, 0.04417125030231106, 0.04563560602177197, 0.047330900190620806, 0.04874200835002962, 0.050235014124140775, 0.05204443084282029, 0.05319217713791691, 0.05416448892049619, 0.05534814504752017, 0.05567914772231508, 0.05554347607796406, 0.055571805819818465, 0.05556291692113846, 0.05567915190984296, 0.05574019674062658, 0.05589295352218304, 0.05683330234766637, 0.05759470683068124, 0.057760079349749915, 0.057897475514018026, 0.05731391015727283, 0.05673247646232005, 0.05684575580940132, 0.05694850226669956, 0.05703334880685307, 0.05705501333488616, 0.05703561122576817, 0.05696562177215614, 0.0568701336728501, 0.0568995446462397, 0.0570121824573393, 0.056760794675924764, 0.0562351864661208, 0.05615472434687363, 0.05607310110495667, 0.05526384943347429, 0.055634847342356464, 0.05588415569097083, 0.055892512279467566, 0.05675082489342942, 0.058292458968584704, 0.05985175922992836, 0.061046487143291195, 0.0633417707841546, 0.06605344443208971, 0.0676686750195643, 0.06873396655229991, 0.07078839866072739, 0.07226358158997259, 0.07369850015340051, 0.07549419941824764, 0.07742776368387516, 0.07951205044159959, 0.08103936301315828, 0.0824166385462406, 0.08476649063899266, 0.08758500431907312, 0.08989704177654856, 0.09208619649156446, 0.0952598121467072, 0.09826242509715866, 0.10000884964706613, 0.1015714492832629, 0.1032351062862038, 0.10487813601263452, 0.10660501426731162, 0.10786341202188732, 0.1087601039225703, 0.10930322893856292, 0.11008558565082605, 0.11014061666357144, 0.10973598492707493, 0.10962225659606917, 0.10878014836773886, 0.108011065349092, 0.10883383525793366, 0.10886363172653479, 0.10813101415843551, 0.10966351527420759, 0.11174455391283211, 0.11379849965314603, 0.11538837401043178, 0.11654349508140016, 0.1182450225354561, 0.12066247264971097, 0.12185074106618665, 0.12266621309150882, 0.12400078863130526, 0.12541115410332182, 0.1255707468390721, 0.1259580272087708, 0.1262203403215998, 0.12813052605268105, 0.1295858247948416, 0.1304882176826483, 0.13116286072082195, 0.13147158103355605, 0.13234179340870167, 0.13219534879514594, 0.13112815638079933, 0.13103299119799283, 0.1308925510219101, 0.12975443660003916, 0.1280017925696617, 0.12525230115665664, 0.12261430634376724, 0.12188278637279204, 0.12160182713791734, 0.11976241775488261, 0.11716521488098786, 0.11473303883376795, 0.11327303673570022, 0.1122766210873869, 0.11241868739269578, 0.11256226470107844, 0.11046424707598446, 0.10679211967420277, 0.10317065324216768, 0.09962959252168058, 0.0969813766066927, 0.09471165697813966, 0.09314434802299298, 0.09065827026854678, 0.08826160258461213, 0.085825210422807, 0.08398592949878347, 0.08198158955915447, 0.08040962351787084, 0.07976965324211283, 0.07948414034224816]
      },
      {
        label: 'Past 24 Hours Rolling Average',
        backgroundColor: 'rgb(255, 0, 0, 0.2)',
        borderColor: "#ff0000",
        borderJoinStyle: 'miter',
        pointBorderColor: "#ff0000",
        pointBackgroundColor: "#ff0000",
        pointHoverBackgroundColor: "#ff0000",
        pointHoverBorderColor: "#ff0000",
        ...pointSizes,
        data: [0.030716775444127542, 0.035964380520657535, 0.0450391108767938, 0.07540168680709702, 0.07556895087616211, 0.07584865978300681, 0.07495811572001254, 0.06471065719903724, 0.06269320889696162, 0.061367573203699344, 0.0608461504065434, 0.06344031181717402, 0.06297398271485233, 0.06268196042064877, 0.06189154708893563, 0.0632411153571042, 0.06389755556130727, 0.06272997068078223, 0.060949517182612434, 0.06282248516627642, 0.06111347468801798, 0.06143044520775787, 0.06254628617846314, 0.05739853003142814, 0.05198781634938898, 0.05421418432429359, 0.05884436433336915, 0.04792994162914588, 0.047766835036420874, 0.050236405674261464, 0.05268478563280654, 0.06558836238936205, 0.06894977412355319, 0.0694518031937239, 0.0692034407829456, 0.06691421134199049, 0.06846384878816258, 0.07055202184284903, 0.07162426569155245, 0.07041721148950564, 0.06654048831469805, 0.06764162460889644, 0.0697642434571164, 0.07348741237791923, 0.06720385076714264, 0.08779588364226543, 0.12059907725811336, 0.1224893946855321, 0.11022478410899783, 0.10615486129188278, 0.09796457048098817, 0.081981660855861, 0.07777344061888192, 0.0749385883198761, 0.07527255531137578, 0.07033932213406913, 0.0708965339942047, 0.07206822030852345, 0.07612209781006096, 0.07409932741359682, 0.06949179494290836, 0.06994323099821309, 0.06630414947279806, 0.06530664282723508, 0.06605740925990822, 0.06239887743503125, 0.06232429396209982, 0.062128516540868706, 0.0629269590270094, 0.06172562144062432, 0.06471460111501992, 0.06542731850560801, 0.07299540225958245, 0.07287072713916842, 0.07447756108795045, 0.07706199771571565, 0.07042318001014936, 0.06751554072602772, 0.0711276486418384, 0.08026725495772813, 0.07449024812507088, 0.06940185896394535, 0.06949093254424499, 0.05105410771494201, 0.019044433811107542, 0.019316735854747913, 0.019978984764611685, 0.018575619381099973, 0.01858670180091182, 0.01864040007718848, 0.019657496549891018, 0.019670002662805386, 0.01914101735114504, 0.01800631820061671, 0.01762334278085942, 0.017979891580842677, 0.019044911836238798, 0.0196552202188236, 0.01926253100268882, 0.01868459980193493, 0.019111693295975618, 0.018737897918401414, 0.020537647415810545, 0.022565842374974165, 0.022510709896415015, 0.023611741846220502, 0.026636808247682442, 0.02793995264066651, 0.028398638174647717, 0.028977371055063594, 0.03039463305743051, 0.033365399135016016, 0.03367705776697294, 0.03947307980693626, 0.04325090217975425, 0.040627312232688784, 0.03978525096672403, 0.039656002313219085, 0.041381491760826394, 0.043572899432020584, 0.04555495401779264, 0.04304657362486353, 0.044399953777959134, 0.04568493139213792, 0.061469226695174406, 0.04933559704734769, 0.041817550486099364, 0.04156216238981725, 0.041585650437206745, 0.04497071109950879, 0.061993200017224526, 0.061991978043596685, 0.040665068175153696, 0.039952867850336915, 0.04097804527929649, 0.042777336151857526, 0.04412098116454599, 0.04587635782410593, 0.04607051211323765, 0.04275673303613958, 0.044379649702599666, 0.07773231884123377, 0.08514839164060972, 0.08232004132474247, 0.08873794500388854, 0.09577876994572532, 0.07435936767377727, 0.06884073468960294, 0.07703768115224818, 0.05343971893828825, 0.04153241463418955, 0.04388599732356813, 0.044136464817905674, 0.049143741597540425, 0.06331202451038664, 0.05390172424129225, 0.07001474011038855, 0.06431118610284647, 0.046482752245995185, 0.04905007041342069, 0.04455647673896923, 0.04461229997533778, 0.04401723540532343, 0.04298989785573748, 0.043487892935686556, 0.04341876455820737, 0.04354534753947781, 0.04380156693210324, 0.04323879965375221, 0.043627511087385384, 0.04772354085787134, 0.07007319754123809, 0.06907222474357777, 0.0798489697490834, 0.08621550774516806, 0.07087184235397292, 0.08574884685971429, 0.07643869035504847, 0.07729504377465957, 0.07943509703016893, 0.08809210141112556, 0.09102772658701563, 0.08003203626550981, 0.11939997409547387, 0.14774355171979758, 0.10287325245888268, 0.10250904290779861, 0.12743432073813565, 0.09061242386394253, 0.09199462962081961, 0.09825643873106293, 0.10244706629877287, 0.10633924741372036, 0.08818087755818715, 0.08411654427935078, 0.11355568824569562, 0.12803175045932647, 0.11246533620594046, 0.10796865906091435, 0.13854826333666792, 0.13740597794022902, 0.1223171650052064, 0.11558231945090558, 0.12985886360392707, 0.13581130913829798, 0.12223589939821333, 0.12340350103263154, 0.10288601985614587, 0.09323895791308923, 0.1025076333061361, 0.08971318545442064, 0.07916104898641474, 0.07671679815588939, 0.09418427811892593, 0.12410398963709568, 0.1277129960277803, 0.10339398201529781, 0.10530090376674983, 0.13677913382556883, 0.15512790738013593, 0.1607880574875491, 0.15064577060524953, 0.14123341587461957, 0.13904757143754454, 0.15667047906318987, 0.1495216718204595, 0.15289401661720903, 0.1528300575587047, 0.15044402605451568, 0.14340131387225208, 0.14920608702085558, 0.13019219649726077, 0.17375621278185083, 0.17441409164041244, 0.16335187479566948, 0.14250710586526893, 0.13263876787300322, 0.12862160675726697, 0.0890101352237953, 0.0717532964912384, 0.08696484949205274, 0.07515239974855126, 0.044677992495543606, 0.04438509947920122, 0.04474404812290267, 0.05103858330002642, 0.08202455083123117, 0.09702348280828477, 0.08215905348158348, 0.07739648465601046, 0.08731703137387137, 0.10628328378915852, 0.11098401543660619, 0.14341727279785976, 0.16116023488878706, 0.08624663526696685, 0.043839212876539246, 0.04487440437426282, 0.04466411841874285, 0.06361017459932405, 0.07997151969560035, 0.08264497656131553, 0.09625586102316075, 0.0994118581503165, 0.08770198073026236, 0.08585413860515678, 0.07146692328619864, 0.08045073716557649, 0.06982861927269202, 0.06328490875864201]
      }
    ]
  }
  return (
   <Line data={formatted} options={options}/>
  )
}

const LiquidityMiningProgressBar = () => {
  const { uniswapPoolTotalLiquidity } = useRecoilValue(currentTokenStatsSelector);
  const targetTotalLiquidity = 100e3;
  let percentComplete = Math.max(1.0, uniswapPoolTotalLiquidity / targetTotalLiquidity * 100);
  const containerStyle = {
    border: '3px solid #F1E8B8',
    borderRadius: '20px',
    padding:40,
    background:"black",
    margin: "40px 0px"
  };
  const outerStyle = {
    height: 30,
    width: "100%",
    background: "#191919",
    borderRadius: 25,
    padding: 10,
    marginBottom: 12
  }
  const innerStyle = {
    height: "100%",
    width: parseFloat(percentComplete) + "%",
    background: "#F1E8B8",
    borderTopRightRadius: 8,
    borderBottomRightRadius: 8,
    borderTopLeftRadius: 20,
    borderBottomLeftRadius: 20,
    overflow: "visible"
  }
  const spaceBetweenStyle = {
    display: 'flex',
    flexDirection: 'row',
    justifyContent: 'space-between',
    alignItems: 'center'
  };
  return (
    <div style={containerStyle}>
      <div style={outerStyle}>
        <div style={innerStyle} />
      </div>
      <div style={spaceBetweenStyle}>
        <span>Current: ${uniswapPoolTotalLiquidity.toLocaleString('en-US', { maximumFractionDigits: 0 })} USD</span>
        <span>Target: ${(targetTotalLiquidity).toLocaleString('en-US', { maximumFractionDigits: 0 })} USD</span>
      </div>
    </div>
  )
}
export default function Home() {
  const readMore = <p><a href="https://evanmays.com/tendiesexchange.html">Read more here</a></p>
  return (
    <>
      <h1>Welcome Home&#8230;</h1>
      <HistoricalChart/>
      <p>
        CAR-USDC-MAR21 is a synthetic future,&nbsp;
        <a href="https://umaproject.org/">built on UMA</a>
        , allowing you to hedge on the APR borrow-rates for USDC from Compound.
        On March 28th, the token resolves to March&apos;s average
        borrowing rate.
      </p>
      <p>
        You can use CAR tokens to hedge or speculate on interest rates.
        If you&apos;d like a near perfect hedge, buy or mint $X USD worth of CAR tokens
        where X is the amount you expect to pay or earn in interest during march.
      </p>
      {readMore}
      <h2>Alpha User Yield Farming</h2>
      <p>
        The first $100,000 worth of liquidity miners will earn all
        of my UMA developer mining rewards for the lifetime of CAR-USDC-MAR21. I expect this is somewhere
        around 100% APY although I can&apos;t be sure.
      </p>
      <LiquidityMiningProgressBar />
      <p>
        There may or may not be an NFT
        airdropped to your address that guarantees this benefit on
        liquidity provided to future Tendies Exchange projects.
        If such an NFT were to theoretically come into existance,
        it would have a reference to the amount of liquidity you provided in this
        alpha program. It would also be transferable/sellable.
      </p>
      <p>
        Eligibility Steps:
      </p>
      <ol>
        <li>Mint CAR tokens</li>
        <li>Provide liquidity to the CAR/USDC pool on Uniswap</li>
        <li>Be among the first $100,000 worth of people to do so</li>
        <li>Optional: Let me know if you find any bugs! (via Twitter or UMA Discord)</li>
      </ol>
      {readMore}
    </>
  );
}
